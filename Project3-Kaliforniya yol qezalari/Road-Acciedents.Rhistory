data = read.table('road.csv',header=TRUE)
data
injuries= data[,7]
plot(injuries, xlab='Year&Region', ylab='Injuries', ylim=c(0,10000))
plot(sort(injuries), xlab='Year&Region, ylab='Injuries', ylim=c(0,1000))
plot(sort(injuries), xlab='Year&Region, ylab='Injuries', ylim=c(0,1000)
plot(sort(injuries), xlab='Year&Region, ylab='Injuries', ylim=c(0,1000))
boxplot(injuries, ylab='Injuries', ylim=c(0,1000))
plot(injuries, xlab='Year&Region', ylab='Injuries', ylim=c(0,10000))
plot(sort(injuries), xlab='Year&Region, ylab='Injuries', ylim=c(0,1000))
plot(injuries, xlab='Year&Region, ylab='Injuries', ylim=c(0,1000))
plot(sort(injuries), xlab='Year&Region', ylab='Injuries', ylim=c(0,1000))
boxplot(injuries, ylab='Injuries', ylim=c(0,1000))
boxplot(injuries, ylab='Injuries', ylim=c(0,100))
summary(injuries)
attach(data)
mode
sum = sum(injuries)
n = length(injuries)
sum/n
mean(injuries)
mean(injuries, trim=0.10)
plot(data$injuries)
plot(injuries, xlab='Year&Region', ylab='Injuries', ylim=c(0,10000))
data = read.table('road.csv',header=TRUE)
data
data = read.table('road.csv',header=TRUE)
data = read.table('road.csv',header=TRUE)
injuries= data[,7]
plot(data$injuries)
plot(injuries, xlab='Year&Region', ylab='Injuries', ylim=c(0,10000))
plot(sort(injuries), xlab='Year&Region', ylab='Injuries', ylim=c(0,1000))
boxplot(injuries, ylab='Injuries', ylim=c(0,100))
summary(injuries)
attach(data)
sum = sum(injuries)
n = length(injuries)
sum/n
mean(injuries)
mean(injuries, trim=0.10)
range(injuries)
max(injuries)
min(injuries)
max(injuries) - min(injuries)
IQR(injuries)
summary(injuries)
var(injuries)
sd(injuries)
sqrt(var(injuries))
round(sd(injuries),1)
injuriesTrim = sort(injuries)
injuriesTrim = nysalariesTrim[3:23]
injuriesTrim = injuriesTrim [3:23]
length(injuriesTrim )
median = median(injuriesTrim )
mean = mean(injuriesTrim )
range = max(injuriesTrim ) - min(injuriesTrim )
iqr = IQR(injuriesTrim )
st.dev = sd(injuriesTrim )
orign = c(median, mean, range, iqr, st.dev)
orign
medianTrim = median(injuriesTrim )
meanTrim = mean(injuriesTrim )
rangeTrim = max(injuriesTrim ) - min(injuriesTrim )
iqrTrim = IQR(injuriesTrim )
st.devTrim = sd(injuriesTrim )
trim = c(medianTrim, meanTrim, rangeTrim, iqrTrim, st.devTrim)
trim
stats = cbind(orign, trim)
stats
rownames(stats) = c('median', 'mean', 'range', 'IQR', 'std.dev')
stats
injuriesTrim = injuriesTrim [3:1000]
median = median(injuries )
mean = mean(injuries)
range = max(injuries ) - min(injuries)
iqr = IQR(injuries )
st.dev = sd(injuries )
orign
hist(injuries)
hist(injuries, breaks=5)
hist(injuries, breaks=5, xlab = 'Injuries (years&Region)')
hist(injuries, breaks=5, xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
hist(injuries, breaks=10,  xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
hist(injuries, breaks=20, xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
hist(injuries, breaks=5, xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
boxplot(injuries, horizontal=TRUE, range=0, xlab =  'Injuries (years&Region)')
boxplot(injuries, horizontal=TRUE, range=10000 xlab =  'Injuries (years&Region)')
boxplot(injuries, horizontal=TRUE, range=10000, xlab =  'Injuries (years&Region)')
summary(injuries, digits=6)
table(injuries)
region
hist(injuries)
hist(injuries, breaks=5)
hist(injuries, breaks=5, xlab = 'Injuries (years&Region)')
hist(injuries, breaks=5, xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
hist(injuries, breaks=10,  xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
hist(injuries, breaks=20, xlab = 'Injuries (years&Region)', main = 'Histogram of Injuries')
boxplot(injuries, horizontal=TRUE, range=10000, xlab =  'Injuries (years&Region)')
summary(injuries)
injuries_counts = table(injuries)
injuries_freq = injuries_counts/sum(sex_injuries)
injuries_freq = injuries_counts/sum(injuries_count)
injuries_freq = injuries_counts/sum(injuries_counts)
injuries_freq
mode_counts = table(mode)
mode_freq = mode_counts/sum(mode_counts)
sex_names = c('All_modes', 'Bicyclist','Bus','Car_pickup','Motorcycle','Pedestrian','Trunc','Vehicles')
mode_names = c('All_modes', 'Bicyclist','Bus','Car_pickup','Motorcycle','Pedestrian','Trunc','Vehicles')
barplot(sex_freq, col=rainbow(2), names.arg = mode_names, main='Skeleton Sex Relative Frequencies')
barplot(mode_counts, col=rainbow(8), names.arg = mode_names, main='Skeleton Sex Bar Chart')
mode_names = c('All_modes', 'cycle','Bus','pickup','Motor','Pedestrian','Trunc','Vehicles')
barplot(mode_counts, col=rainbow(8), names.arg = mode_names, main='Skeleton Sex Bar Chart')
mode_names = c('All', 'Cycle','Bus','Pickup','Motor','Pedestrian','Trunc','Vehicles')
barplot(mode_counts, col=rainbow(8), names.arg = mode_names, main='Skeleton Sex Bar Chart')
mode_names = c('All', 'Cycle','Bus','Pickup','Motor','Pedstrian','Trunc','Vehicles')
barplot(mode_counts, col=rainbow(8), names.arg = mode_names, main='Skeleton Sex Bar Chart')
mode_names = c('All', 'Cycle','Bus','Pickup','Motor','Pdstrn','Trunc','Vehicles')
barplot(mode_counts, col=rainbow(8), names.arg = mode_names, main='Skeleton Sex Bar Chart')
barplot(mode_counts, col=rainbow(8), names.arg = mode_names, main='Car Mode Accident BarPlot')
barplot(mode_freq, col=rainbow(8), names.arg = mode_names, main='Car Mode Accident Relative Frequencies')
pie(mode_counts, col=rainbow(8), label=mode_names, main=Car Mode Accident Pie Chart')
BMI_counts = table(BMI)
pie(mode_counts, col=rainbow(8), label=mode_names, main='Car Mode Accident Pie Chart')
Mode = factor(mode, levels = c('All', 'Cycle', 'Bus', 'Pickup','Motor','Pdstrn','Trunk','Vhecles'))
Severity = factor(severity, levels=c('Killed', 'SevereInjuiry'), labels=c('Killed', 'SevereInjuiry))
freqMode = table(Mode)
Severity = factor(severity, levels=c('Killed', 'SevereInjuiry'))
freqMode = table(Mode)
relfreqMode = table(BMI)/10000
relfreqMode = table(Mode)/10000
cbind(freqMode, relfreqMode)
Mode = factor(mode, levels = c('All', 'Cycle', 'Bus', 'Pickup','Motor','Pdstrn','Trunk','Vhicles'))
Severity = factor(severity, levels=c('Killed', 'SevereInjuiry'))
freqMode = table(Mode)
relfreqMode = table(Mode)/1000
cbind(freqMode, relfreqMode)
Mode = factor(mode)
freqMode = table(Mode)
cbind(freqMode, relfreqMode)
relfreqMode = table(Mode)/100
cbind(freqMode, relfreqMode)
relfreqMode = table(Mode)/1000
cbind(freqMode, relfreqMode)
relfreqMode = table(Mode)/10000
cbind(freqMode, relfreqMode)
Mode = factor(mode)
Severity = factor(severity)
freqMode = table(Mode)
relfreqMode = table(Mode)/10000
cbind(freqMode, relfreqMode)
freqSeverity = table(Sex)
freqSeverity = table(Severity)
relfreqSeverity = table(Severity)/1000
cbind(freqSeverity , relfreqSeverity )
freqSeverity = table(Severity)
relfreqSeverity = table(Severity)/100000
cbind(freqSeverity , relfreqSeverity )
utils:::menuInstallPkgs()
library(gmodels)
utils:::menuInstallPkgs()
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
library(gmodels)
joint = CrossTable(BMI, Sex, prop.chisq=FALSE)
joint
plot(reportyear, injuires, xlab='Report Year', ylab='Total Injuires', main='Scatterplot: Life Expectancy versus GDP per capita')
attach(data)
plot(reportyear, injuries, xlab='Report Year', ylab='Total Injuires', main='Scatterplot: Life Expectancy versus GDP per capita')
plot(reportyear, injuries, xlab='Report Year', ylab='Total Injuires', main='Scatterplot: Injuires for years')
cor(reportyear, injuries)
cor(injuries, reportyear)
dbinom(0, size=3, prob=1/2)
x = seq(0, 3, by=1)
prob_x = dbinom(x, size=3, prob=1/2)
cbind(x, prob_x)
plot(x, prob_x, type='h', col='red', main='Binomial(3,1/2)')
sum(x*prob_x)
y = seq(0,50,by=1)
dbinom(0, size=3, prob=1/2)
x = seq(0, 3, by=1)
prob_x = dbinom(x, size=3, prob=1/2)
cbind(x, prob_x)
plot(x, prob_x, type='h', col='red', main='Binomial(3,1/2)')
sum(x*prob_x)
y = seq(0,50,by=1)
prob_y = dbinom(y,50,0.20)
plot(y, prob_y, type='h', col='red', main='Binomial(50, .2)')
x = seq(-1,2,length=100)
unif01 = dunif(x, min=0, max=1)
plot(x, unif01, type='l', col='red', main='Uniform[0,1]')
x = seq(-3, 3, length=100)
normal01 = dnorm(x, mean=0, sd=1)
plot(x, normal01, type='l', col='red', main='Normal(0,1)')
rbinom(1, 10, prob=0.5)
binom_sample = rbinom(1000, 10, prob=0.5)
table(binom_sample)
binom_sample
freq = table(binom_sample)
barplot(freq, xlab = 'X=number of heads')
plot(x, prob_x, type='h', col='red', main='Binomial(3,1/2)')
plot(x, prob_x, type='h', col='red', main='Binomial(3,1/2)')
dbinom(0, size=3, prob=1/2)
dbinom(0, size=3, prob=1/2)
x = seq(0, 3, by=1)
prob_x = dbinom(x, size=3, prob=1/2)
cbind(x, prob_x)
plot(x, prob_x, type='h', col='red', main='Binomial(3,1/2)')
sum(x*prob_x)
y = seq(0,50,by=1)
prob_y = dbinom(y,50,0.20)
plot(y, prob_y, type='h', col='red', main='Binomial(50, .2)')
x = seq(-1,2,length=100)
unif01 = dunif(x, min=0, max=1)
plot(x, unif01, type='l', col='red', main='Uniform[0,1]')
x = seq(-3, 3, length=100)
normal01 = dnorm(x, mean=0, sd=1)
plot(x, normal01, type='l', col='red', main='Normal(0,1)')
rbinom(1, 10, prob=0.5)
binom_sample = rbinom(1000, 10, prob=0.5)
table(binom_sample)
binom_sample
barplot(freq, xlab = 'X=number of heads')
phat = 0.576
z = qnorm(0.025, mean=0, sd=1, lower.tail=FALSE)
ME = z * sqrt(phat*(1-phat)/1000)
phat + c(-ME, +ME)
library(binom)
binom.confint(576, 1000, conf.level=0.95, methods='asymptotic')
ME = z* sqrt(1/2*1/2 / 1000)
phat + c(-ME, +ME)
p = 1/2
ME = 0.03
z = qnorm(0.025, mean=0, sd=1, lower.tail=FALSE)
z
z^2 * p * (1-p) / ME^2
ME = 0.01
z^2 * p * (1-p) / ME^2
z = qnorm(0.005, mean=0, sd=1, lower.tail=FALSE)
z
z^2 * p * (1-p) / ME^2
xbar = mean(injuries)
var = var(injuries)
xbar = mean(injuries)
var = var(injuries)
t = qt(0.025, df=59, lower.tail=FALSE)
ME = t* sqrt(var/60)
xbar + c(-ME, +ME)
t.test(injuries, conf.level=0.95)
t.test(injuries, conf.level=0.95)$conf.int
t = qt(0.025, df=37253, lower.tail=FALSE)
ME = t* sqrt(var/37254)
xbar + c(-ME, +ME)
t.test(injuries, conf.level=0.95)
t.test(injuries, conf.level=0.95)$conf.int
test.stat = (0.42-0.5) / sqrt(0.5*0.5/1046)
test.stat
pnorm(test.stat, mean=0, sd=1, lower.tail=TRUE)
x = round(0.42*1046, 0)
x
binom.test(x, 1046, p=0.5, alternative='less')
binom.test(576, 1000, p=0.5, alternative='two.sided')
test.stat = (0.42-0.5) / sqrt(0.5*0.5/1046)
test.stat
pnorm(test.stat, mean=0, sd=1, lower.tail=TRUE)
x = round(0.42*1046, 0)
x
binom.test(x, 1046, p=0.5, alternative='less')
binom.test(576, 1000, p=0.5, alternative='two.sided')
xbar = mean(injuires)
xbar = mean(injuries)
s2 = var(injuries)
n = length(injuries)
t = (xbar - 0) / sqrt(s2/n)
t
pt(t, df=n-1, lower.tail=F)
t.test(temp, mu=37, alternative='two.sided')
t.test(injuries, mu=37, alternative='two.sided')
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
#Regression
#lm=linear model
#Response variable: DGDifference
lm(injuries~reportyear)
lm(reportyear~injuries)
lm(injuries~reportyear)
linreg = lm(DGDifference~BMIquant)
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
abline(linreg, col='red')
linreg = lm(DGDifference~BMIquant)
linreg = lm(injuries~reportyear)
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
abline(linreg, col='red')
linreg$residuals
#mean(residuals) = 0
mean(linreg$residuals)
summary(linreg)
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
#Regression
#lm=linear model
#Response variable: DGDifference
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
lm(injuries~reportyear)
linreg = lm(injuries~reportyear)
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
abline(linreg, col='red')
linreg$residuals
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
lm(injuries~reportyear)
linreg = lm(injuries~reportyear)
plot(injuries, reportyear, xlab='Years&Region', ylab='Injuires(years)', main='Scatterplot:Injuries for years')
abline(linreg, col='red')
mean(linreg$residuals)
summary(linreg)
linreg = lm(reportyear ~ injuries)
plot(injuries, reportyear , xlab='years&regions', ylab='Injuries for yeARS')
abline(linreg, col='orange')
resids = linreg$resid
plot(injuries, resids, xlab="years&regions)", ylab="Residuals (years)")
abline(h=0, col="red")
loginjuries = log10(injuries )
linreg_log = lm(reportyear ~ injuries)
plot(loginjuries, reportyear, col="purple", xlab="Logarithm of Injuiresfor years", ylab="Injuires")
abline(linreg_log, col='orange')
resids_log = linreg_log$resid
plot(loginjuries, resids_log, xlab="Logarithm of Injuiresfor years", ylab="Residuals (years)")
abline(h=0, col="red")
history
